
pipeline{
    agent any
    tools{
        jdk 'jdk17'
        nodejs 'node16'
    }
    parameters {
        string(defaultValue: '1.0', description: 'Custom versions for the image', name: 'IMAGE_VERSION')
    }
    environment {
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages {
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        stage("Sonarqube Analysis "){
            steps{
                withSonarQubeEnv('sonar-server') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=twitter \
                    -Dsonar.projectKey=twitter '''
                }
            }
        }
        stage("quality gate"){
           steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-token' 
                }
            } 
        }
        stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }
        // stage('OWASP FS SCAN') {
        //     steps {
        //         dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
        //         dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
        //     }
        // }
        stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }

    //     stage("Docker Build & Push"){
    //         steps{
    //             script{
    //                  echo "build image"
    //                 sh "docker build -t sahilchaudhari2405/my-repo:${IMAGE_VERSION} ."
    //                 withCredentials([usernamePassword(credentialsId: 'docker', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
    //                 sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
    //                 sh "docker push sahilchaudhari2405/my-repo:${IMAGE_VERSION}"
    // }
    //             }
    //         }
    //     }
    //     stage("TRIVY"){
    //         steps{
    //             sh "trivy image nasi101/netflix:latest > trivyimage.txt" 
    //         }
    //     }
    //     stage('Deploy to container'){
    //         steps{
    //             sh 'docker run -d --name twitter -p 2000:2000 sahilchaudhari2405/my-repo:${IMAGE_VERSION}'
    //         }
    //     }
    }
}

